/*
 * Gallop API
 *
 * Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@higallop.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetEthCollectionFloorPriceOhlcRequest {
    /// The Ethereum contract address to identify the collection.
    #[serde(rename = "collection_address")]
    pub collection_address: String,
    /// The interval at which to return OHLC, e.g. `1D` for daily, `1M` for monthly etc.
    #[serde(rename = "frequency", skip_serializing_if = "Option::is_none")]
    pub frequency: Option<String>,
    /// An attribute of the NFT to group results by.
    #[serde(rename = "group_by", skip_serializing_if = "Option::is_none")]
    pub group_by: Option<String>,
    /// The start date to pull data for calculations
    #[serde(rename = "start_date", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// The end date to pull data for calculations
    #[serde(rename = "end_date", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
}

impl GetEthCollectionFloorPriceOhlcRequest {
    pub fn new(collection_address: String) -> GetEthCollectionFloorPriceOhlcRequest {
        GetEthCollectionFloorPriceOhlcRequest {
            collection_address,
            frequency: None,
            group_by: None,
            start_date: None,
            end_date: None,
        }
    }
}


