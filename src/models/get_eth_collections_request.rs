/*
 * Gallop API
 *
 * Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@higallop.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetEthCollectionsRequest {
    /// The pagination cursor.
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// The number of records returned per page.
    #[serde(rename = "page_size", skip_serializing_if = "Option::is_none")]
    pub page_size: Option<PageSize>,
    /// The name of the collection searched.
    #[serde(rename = "collection_name", skip_serializing_if = "Option::is_none")]
    pub collection_name: Option<String>,
    /// Only return collections that have traded.
    #[serde(rename = "traded", skip_serializing_if = "Option::is_none")]
    pub traded: Option<bool>,
    /// Only return collections recorded after this day [YYYY-MM-DD]
    #[serde(rename = "created_after", skip_serializing_if = "Option::is_none")]
    pub created_after: Option<String>,
    /// The value to sort by. Defaults to created_at
    #[serde(rename = "sort_by", skip_serializing_if = "Option::is_none")]
    pub sort_by: Option<SortBy>,
}

impl GetEthCollectionsRequest {
    pub fn new() -> GetEthCollectionsRequest {
        GetEthCollectionsRequest {
            page: None,
            page_size: None,
            collection_name: None,
            traded: None,
            created_after: None,
            sort_by: None,
        }
    }
}

/// The number of records returned per page.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PageSize {
    #[serde(rename = "50")]
    Variant50,
    #[serde(rename = "100")]
    Variant100,
    #[serde(rename = "500")]
    Variant500,
    #[serde(rename = "1000")]
    Variant1000,
}

impl Default for PageSize {
    fn default() -> PageSize {
        Self::Variant50
    }
}
/// The value to sort by. Defaults to created_at
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SortBy {
    #[serde(rename = "created_at")]
    CreatedAt,
    #[serde(rename = "collection_name")]
    CollectionName,
}

impl Default for SortBy {
    fn default() -> SortBy {
        Self::CreatedAt
    }
}

